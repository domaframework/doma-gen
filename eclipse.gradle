apply plugin: 'eclipse'

eclipse {
    classpath {
        file {
            whenMerged { classpath ->
                classpath.entries.removeAll { it.kind == "con" }
            }
            withXml {
                def node = it.asNode()
                node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'])
            }
        }
    }
}

eclipseJdt {
    doLast { 
        file('.settings/org.eclipse.jdt.core.prefs').withWriter { writer ->
            writer << file('eclipse/org.eclipse.jdt.core.prefs').text
        }
        file('.settings/org.eclipse.jdt.ui.prefs').withWriter { writer ->
            writer << file('eclipse/org.eclipse.jdt.ui.prefs').text
        }
    }
}

task cleanEclipseJdtSettings(type: Delete) {
  delete file('.settings/org.eclipse.jdt.ui.prefs')
  delete file('.settings/org.eclipse.jdt.core.prefs')
}

tasks["cleanEclipse"].dependsOn(cleanEclipseJdtSettings)
