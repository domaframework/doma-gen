apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'signing'
apply plugin: 'maven'

group = 'org.seasar.doma'
version = '2.8.0'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.encoding = 'UTF-8'
sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion

compileJava {
    doFirst {
        ant.replaceregexp(
            match: /(private static final String VERSION = ")[^"]*(")/,
            replace: "\\1${version}\\2",
            encoding: encoding, 
            flags: 'g') {
                fileset(dir: '.') {
                    include(name: '**/Artifact.java')
                }
            }
        ant.replaceregexp(
            match: /('org.seasar.doma:doma-gen:)[^']*(')/,
            replace: "\\1${version}\\2",
            encoding: encoding, 
            flags: 'g') {
                fileset(dir: 'docs/sources') {
                    include(name: '**/*.rst')
                }
            }
    }
    options.encoding = encoding
}

compileTestJava {
    options.encoding = encoding
    options.compilerArgs = ['-proc:none']
}

javadoc {
    options.encoding = encoding
    options.charSet = encoding
    options.docEncoding = encoding
    exclude '**/internal/**'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Doma-Gen', 'Implementation-Version': version
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {url 'https://oss.sonatype.org/content/repositories/snapshots/'}
}

dependencies {
    compile "org.seasar.doma:doma:${version}"
    compile 'org.freemarker:freemarker:2.3.20'
    compile 'org.apache.ant:ant:1.9.3'
    testCompile 'junit:junit:4.11'
}

task sourcesJar (type : Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar (type : Jar, dependsOn : javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

build.dependsOn install

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment {MavenDeployment deployment ->
            signing.signPom(deployment)
        }
        repository (url : sonatypeUrl) {
            authentication (
                    userName : sonatypeUsername,
                    password : sonatypePassword)
        }
        snapshotRepository (url : sonatypeSnapshotUrl) {
            authentication (
                    userName : sonatypeUsername,
                    password : sonatypePassword)
        }
        pom.project {
            name project.name
            packaging 'jar'
            description 'Code generator for Doma'
            url projectUrl
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/license/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                url githubUrl
                connection "scm:git:${githubUrl}"
                developerConnection "scm:git:${githubUrl}"
            }
            developers {
                developer {
                    id 'nakamura-to'
                    name 'Toshihiro Nakamura'
                    email 'toshihiro.nakamura@gmail.com'
                }
            }
        }
    }
}

apply from:'eclipse.gradle'